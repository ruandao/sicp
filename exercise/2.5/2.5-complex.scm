
(load "2.5-rectangle.scm")
(load "2.5-polar.scm")

(define (install-complex-package)
  ;; import
  (define (make-from-real-imag x y)
    ((get 'make-from-real-imag 'rectangular) x y))
  (define (make-from-mag-ang r a)
    ((get 'make-from-mag-ang 'polar) r a))
  ;; internal
  (define (add-complex z1 z2)
    (make-from-real-imag (add (real-part z1) (real-part z2))
                         (add (imag-part z1) (imag-part z2))))
  (define (sub-complex z1 z2)
    (make-from-real-imag (sub (real-part z1) (real-part z2))
                         (sub (imag-part z1) (imag-part z2))))
  (define (mul-complex z1 z2)
    (make-from-mag-ang (mul (magnitude z1) (magnitude z2))
                       (add (angle z1) (angle z2))))
  (define (div-complex z1 z2)
    (make-from-mag-ang (div (magnitude z1) (magnitude z2))
                       (sub (angle z1) (angle z2))))
  (define (equ? z1 z2)
    (and (= (real-part z1) (real-part z2))
         (= (imag-part z1) (imag-part z2))))
  (define (=zero? z)
    (= (real-part z) 0))
  (define (project complex)
    (let ((x (contents complex)))
      ((get 'make 'rational) (real-part x) 1)))
  ;; interface
  (define (tag z) (attach-tag 'complex z))
  (put 'add       '(complex complex) (lambda (z1 z2) (tag (add-complex z1 z2))))
  (put 'sub       '(complex complex) (lambda (z1 z2) (tag (sub-complex z1 z2))))
  (put 'mul       '(complex complex) (lambda (z1 z2) (tag (mul-complex z1 z2))))
  (put 'div       '(complex complex) (lambda (z1 z2) (tag (div-complex z1 z2))))
  (put 'equ?      '(complex complex) (lambda (z1 z2) (equ? z1 z2)))
  (put '=zero?    '(complex)         (lambda (z)     (=zero? z)))
  (put 'real-part '(complex)         real-part)
  (put 'imag-part '(complex)         imag-part)
  (put 'magnitude '(complex)         magnitude)
  (put 'angle     '(complex)         angle)
  (put 'make-from-real-imag 'complex (lambda (x y) (tag (make-from-real-imag x y))))
  (put 'make-from-mag-ang   'complex (lambda (x y) (tag (make-from-mag-ang x y))))
  (put 'level 'complex            (lambda () (+ (get 'level 'real) 1)))
  (put 'project 'complex                project)
  'done)
